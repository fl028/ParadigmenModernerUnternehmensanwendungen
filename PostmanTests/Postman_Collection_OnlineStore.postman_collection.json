{
	"info": {
		"_postman_id": "6455b7d9-35e0-485e-92fc-e445e8c029ed",
		"name": "Postman_Collection_OnlineStore",
		"description": "Make Sure that your database is empty!",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "CustomerController",
			"item": [
				{
					"name": "1 - GET /customers -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/customers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 - GET /customers/{id} -> 404 (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/customers/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customers",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "3 - POST /customers -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"firstName\" : \"firstName1\", \"lastName\" : \"lastName1\", \"id\" : null, \"email\" : \"email1\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/customers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "4 - GET /customers/{id} -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/customers/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customers",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 - POST /customers -> 400 (id is set)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"firstName\" : \"firstName1\", \"lastName\" : \"lastName1\", \"id\" : 1, \"email\" : \"email1\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/customers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "6 - POST /customers -> 400 (email not unique)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"firstName\" : \"firstName1\", \"lastName\" : \"lastName1\", \"id\" : null, \"email\" : \"email1\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/customers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "7 - PUT /customers -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"firstName\" : \"firstName1\", \"lastName\" : \"lastName1\", \"id\" : 1, \"email\" : \"new_email1\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/customers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "8 - PUT /customers/{id} -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"firstName\" : \"firstName1\", \"lastName\" : \"lastName1\", \"id\" : 1, \"email\" : \"new_new_email1\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/customers/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customers",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "9 - PUT /customers -> 400 (invalid id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"firstName\" : \"firstName1\", \"lastName\" : \"lastName1\", \"id\" : null, \"email\" : \"new_email1\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/customers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "10 - PUT /customers/{id} -> 404 (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"firstName\" : \"firstName1\", \"lastName\" : \"lastName1\", \"id\" : 0, \"email\" : \"new_email1\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/customers/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customers",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "11 - PUT /customers -> 404 (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"firstName\" : \"firstName1\", \"lastName\" : \"lastName1\", \"id\" : 0, \"email\" : \"new_email1\"}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/customers",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "12 - DELETE /customers/{id} -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/customers/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customers",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "13 - DELETE /customers/{id} -> 404 (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/customers/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"customers",
								"0"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ProductCategoryController",
			"item": [
				{
					"name": "1 - GET /productcategories-> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/productcategories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productcategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 - GET /productcategories/{id} -> 404 (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/productcategories/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productcategories",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "3 - POST /productcategories-> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\" : \"name\", \"description\" : \"description\", \"id\" : null, \"products\" : [ { \"image\" : [ \"\", \"\" ], \"size\" : \"S\", \"price\" : 0.6027456, \"imageContentType\" : \"imageContentType\", \"name\" : \"name\", \"description\" : \"description\", \"id\" : 0 }, { \"image\" : [ \"\", \"\" ], \"size\" : \"S\", \"price\" : 0.6027456, \"imageContentType\" : \"imageContentType\", \"name\" : \"name\", \"description\" : \"description\", \"id\" : 0 } ]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/productcategories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productcategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "4 - GET /productcategories/{id} -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/productcategories/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productcategories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 - POST /productcategories -> 400 (id is set)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\" : \"name\", \"description\" : \"description\", \"id\" : 0, \"products\" : [ { \"image\" : [ \"\", \"\" ], \"size\" : \"S\", \"price\" : 0.6027456, \"imageContentType\" : \"imageContentType\", \"name\" : \"name\", \"description\" : \"description\", \"id\" : 0 }, { \"image\" : [ \"\", \"\" ], \"size\" : \"S\", \"price\" : 0.6027456, \"imageContentType\" : \"imageContentType\", \"name\" : \"name\", \"description\" : \"description\", \"id\" : 0 } ]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/productcategories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productcategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "7 - PUT /productcategories-> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\" : \"name\", \"description\" : \"new_description\", \"id\" : 1, \"products\" : []}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/productcategories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productcategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "8 - PUT /productcategories/{id} -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\" : \"name\", \"description\" : \"new_description\", \"id\" : null, \"products\" : []}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/productcategories/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productcategories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "9 - PUT /productcategories-> 400 (invalid id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\" : \"name\", \"description\" : \"new_description\", \"id\" : null, \"products\" : [ { \"image\" : [ \"\", \"\" ], \"size\" : \"S\", \"price\" : 0.6027456, \"imageContentType\" : \"imageContentType\", \"name\" : \"name\", \"description\" : \"description\", \"id\" : 0 }, { \"image\" : [ \"\", \"\" ], \"size\" : \"S\", \"price\" : 0.6027456, \"imageContentType\" : \"imageContentType\", \"name\" : \"name\", \"description\" : \"description\", \"id\" : 0 } ]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/productcategories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productcategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "10 - PUT /productcategories/{id} -> 404 (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\" : \"name\", \"description\" : \"new_description\", \"id\" : 0, \"products\" : [ { \"image\" : [ \"\", \"\" ], \"size\" : \"S\", \"price\" : 0.6027456, \"imageContentType\" : \"imageContentType\", \"name\" : \"name\", \"description\" : \"description\", \"id\" : 0 }, { \"image\" : [ \"\", \"\" ], \"size\" : \"S\", \"price\" : 0.6027456, \"imageContentType\" : \"imageContentType\", \"name\" : \"name\", \"description\" : \"description\", \"id\" : 0 } ]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/productcategories/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productcategories",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "11 - PUT /productcategories -> 404 (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\" : \"name\", \"description\" : \"new_description\", \"id\" : 0, \"products\" : [ { \"image\" : [ \"\", \"\" ], \"size\" : \"S\", \"price\" : 0.6027456, \"imageContentType\" : \"imageContentType\", \"name\" : \"name\", \"description\" : \"description\", \"id\" : 0 }, { \"image\" : [ \"\", \"\" ], \"size\" : \"S\", \"price\" : 0.6027456, \"imageContentType\" : \"imageContentType\", \"name\" : \"name\", \"description\" : \"description\", \"id\" : 0 } ]}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/productcategories",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productcategories"
							]
						}
					},
					"response": []
				},
				{
					"name": "12 - DELETE /productcategories/{id} -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/productcategories/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productcategories",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "13 - DELETE /productcategories/{id} -> 404 (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/productcategories/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productcategories",
								"0"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "ProductController",
			"item": [
				{
					"name": "1 - GET /products-> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 - GET /products/{id} -> 404 (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/products/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "3 - POST /products-> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"image\" : [ \"\", \"\" ], \"size\" : \"S\", \"price\" : 0.6027456, \"imageContentType\" : \"imageContentType\", \"name\" : \"name\", \"description\" : \"description\", \"id\" : null}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "4 - GET /products/{id} -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/products/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 - POST /products-> 400 (id is set)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"image\" : [ \"\", \"\" ], \"size\" : \"S\", \"price\" : 0.6027456, \"imageContentType\" : \"imageContentType\", \"name\" : \"name\", \"description\" : \"description\", \"id\" : 0}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "7 - PUT /products-> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"image\" : [ \"\", \"\" ], \"size\" : \"S\", \"price\" : 0.6027456, \"imageContentType\" : \"imageContentType\", \"name\" : \"new_name\", \"description\" : \"description\", \"id\" : 1}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "8 - PUT /products/{id} -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"image\" : [ \"\", \"\" ], \"size\" : \"S\", \"price\" : 0.6027456, \"imageContentType\" : \"imageContentType\", \"name\" : \"new_newname\", \"description\" : \"description\", \"id\" : 1}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/products/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "9 - PUT /products-> 400 (invalid id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"image\" : [ \"\", \"\" ], \"size\" : \"S\", \"price\" : 0.6027456, \"imageContentType\" : \"imageContentType\", \"name\" : \"new_newname\", \"description\" : \"description\", \"id\" : null}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "10 - PUT /products/{id} -> 404 (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"image\" : [ \"\", \"\" ], \"size\" : \"S\", \"price\" : 0.6027456, \"imageContentType\" : \"imageContentType\", \"name\" : \"new_newname\", \"description\" : \"description\", \"id\" : 0}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/products/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "11 - PUT /products -> 404 (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"image\" : [ \"\", \"\" ], \"size\" : \"S\", \"price\" : 0.6027456, \"imageContentType\" : \"imageContentType\", \"name\" : \"new_newname\", \"description\" : \"description\", \"id\" : 0}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "12 - DELETE /products/{id} -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/products/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "13 - DELETE /products/{id} -> 404 (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/products/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"products",
								"0"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ProductOrderController",
			"item": [
				{
					"name": "1 - GET /productorders-> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/productorders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productorders"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 - GET /productorders/{id} -> 404 (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/productorders/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productorders",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "3 - POST /productorders-> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": null,\r\n    \"placedDate\": null,\r\n    \"orderItems\": [\r\n        {\r\n            \"quantity\": 1,\r\n            \"totalPrice\": 500.0,\r\n            \"id\": 6,\r\n            \"status\": \"AVAILABLE\"\r\n        },\r\n        {\r\n            \"quantity\": 1,\r\n            \"totalPrice\": 100.0,\r\n            \"id\": 6,\r\n            \"status\": \"AVAILABLE\"\r\n        }\r\n    ],\r\n    \"status\": \"PENDING\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/productorders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productorders"
							]
						}
					},
					"response": []
				},
				{
					"name": "4 - GET /productorders/{id} -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/productorders/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productorders",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 - POST /productorders-> 400 (id is set)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 0,\r\n    \"placedDate\": \"2000-01-23T04:56:07.000+00:00\",\r\n    \"orderItems\": [\r\n        {\r\n            \"quantity\": 1,\r\n            \"totalPrice\": 500.0,\r\n            \"id\": 6,\r\n            \"status\": \"AVAILABLE\"\r\n        },\r\n        {\r\n            \"quantity\": 1,\r\n            \"totalPrice\": 100.0,\r\n            \"id\": 6,\r\n            \"status\": \"AVAILABLE\"\r\n        }\r\n    ],\r\n    \"status\": \"COMPLETED\",\r\n    \"customer\": {\r\n        \"firstName\": \"firstName\",\r\n        \"lastName\": \"lastName\",\r\n        \"id\": 5,\r\n        \"email\": \"email\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/productorders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productorders"
							]
						}
					},
					"response": []
				},
				{
					"name": "6 - POST /productorders-> 400 (no order item)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": null,\r\n    \"placedDate\": \"2000-01-23T04:56:07.000+00:00\",\r\n    \"orderItems\": [\r\n    ],\r\n    \"status\": \"COMPLETED\",\r\n    \"customer\": {\r\n        \"firstName\": \"firstName\",\r\n        \"lastName\": \"lastName\",\r\n        \"id\": 5,\r\n        \"email\": \"email\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/productorders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productorders"
							]
						}
					},
					"response": []
				},
				{
					"name": "7 - POST /productorders-> 422 (no basket value > 100)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": null,\r\n    \"placedDate\": \"2000-01-23T04:56:07.000+00:00\",\r\n    \"orderItems\": [\r\n        {\r\n            \"quantity\": 1,\r\n            \"totalPrice\": 50.0,\r\n            \"id\": 6,\r\n            \"status\": \"AVAILABLE\"\r\n        },\r\n        {\r\n            \"quantity\": 1,\r\n            \"totalPrice\": 10.0,\r\n            \"id\": 6,\r\n            \"status\": \"AVAILABLE\"\r\n        }\r\n    ],\r\n    \"status\": \"COMPLETED\",\r\n    \"customer\": {\r\n        \"firstName\": \"firstName\",\r\n        \"lastName\": \"lastName\",\r\n        \"id\": 5,\r\n        \"email\": \"email\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/productorders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productorders"
							]
						}
					},
					"response": []
				},
				{
					"name": "8 - PUT /productorders-> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"placedDate\": null,\r\n    \"orderItems\": [\r\n        {\r\n            \"quantity\": 1,\r\n            \"totalPrice\": 700.0,\r\n            \"id\": null,\r\n            \"status\": \"AVAILABLE\"\r\n        },\r\n        {\r\n            \"quantity\": 1,\r\n            \"totalPrice\": 700.0,\r\n            \"id\": null,\r\n            \"status\": \"AVAILABLE\"\r\n        }\r\n    ],\r\n    \"status\": \"PENDING\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/productorders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productorders"
							]
						}
					},
					"response": []
				},
				{
					"name": "9 - PUT /productorders/{id} -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": 1,\r\n    \"placedDate\": null,\r\n    \"orderItems\": [\r\n        {\r\n            \"quantity\": 1,\r\n            \"totalPrice\": 700.0,\r\n            \"id\": null,\r\n            \"status\": \"AVAILABLE\"\r\n        },\r\n        {\r\n            \"quantity\": 1,\r\n            \"totalPrice\": 700.0,\r\n            \"id\": null,\r\n            \"status\": \"AVAILABLE\"\r\n        }\r\n    ],\r\n    \"status\": \"PENDING\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/productorders/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productorders",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "10 - PUT /productorders-> 400 (invalid id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"id\" : null, \"placedDate\" : \"2000-01-23T04:56:07.000+00:00\", \"orderItems\" : [ { \"quantity\" : 0, \"totalPrice\" : 5.962134, \"id\" : 6, \"status\" : \"AVAILABLE\" }, { \"quantity\" : 0, \"totalPrice\" : 5.962134, \"id\" : 6, \"status\" : \"AVAILABLE\" } ], \"status\" : \"COMPLETED\", \"customer\" : { \"firstName\" : \"firstName\", \"lastName\" : \"lastName\", \"id\" : 5, \"email\" : \"email\" }}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/productorders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productorders"
							]
						}
					},
					"response": []
				},
				{
					"name": "11 - PUT /productorders/{id} -> 404 (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"id\" : 0, \"placedDate\" : \"2000-01-23T04:56:07.000+00:00\", \"orderItems\" : [ { \"quantity\" : 0, \"totalPrice\" : 5.962134, \"id\" : 6, \"status\" : \"AVAILABLE\" }, { \"quantity\" : 0, \"totalPrice\" : 5.962134, \"id\" : 6, \"status\" : \"AVAILABLE\" } ], \"status\" : \"COMPLETED\", \"customer\" : { \"firstName\" : \"firstName\", \"lastName\" : \"lastName\", \"id\" : 5, \"email\" : \"email\" }}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/productorders/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productorders",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "12 - PUT /productorders-> 404 (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"id\" : 0, \"placedDate\" : \"2000-01-23T04:56:07.000+00:00\", \"orderItems\" : [ { \"quantity\" : 0, \"totalPrice\" : 5.962134, \"id\" : 6, \"status\" : \"AVAILABLE\" }, { \"quantity\" : 0, \"totalPrice\" : 5.962134, \"id\" : 6, \"status\" : \"AVAILABLE\" } ], \"status\" : \"COMPLETED\", \"customer\" : { \"firstName\" : \"firstName\", \"lastName\" : \"lastName\", \"id\" : 5, \"email\" : \"email\" }}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/productorders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productorders"
							]
						}
					},
					"response": []
				},
				{
					"name": "13 - DELETE /productorders/{id} -> 200",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/productorders/1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productorders",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "14 - DELETE /productorders/{id} -> 404 (not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/productorders/0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"productorders",
								"0"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}